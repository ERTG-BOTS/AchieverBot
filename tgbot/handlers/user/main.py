from aiogram import Router, F
from aiogram.filters import CommandStart
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, CallbackQuery

from infrastructure.database.models import User
from infrastructure.database.repo.requests import RequestsRepo
from tgbot.config import load_config
from tgbot.keyboards.user.main import user_kb, MainMenu, back_kb

user_router = Router()

config = load_config(".env")


@user_router.message(CommandStart())
async def main_cmd(message: Message, state: FSMContext, stp_db):
    async with stp_db() as session:
        repo = RequestsRepo(session)
        user: User = await repo.users.get_user(user_id=message.from_user.id)

    state_data = await state.get_data()

    if user:
        await message.answer_sticker(
            sticker="CAACAgIAAxkBAAEMCf5mM0yOPIO3B7VADqT6-c8Lmhi-oQACH0YAAmAamUnQNXBXD5yG_DQE"
        )
        await message.answer(
            f"""–ü—Ä–∏–≤–µ—Ç, <b>{user.FIO}</b>!

–Ø - –ê—á–∏–≤–µ—Ä
–ü–æ–º–æ–≥—É —Ç–µ–±–µ –ø–æ–ª—É—á–∏—Ç—å –Ω–∞–≥—Ä–∞–¥—ã –∏ –±–æ–Ω—É—Å—ã –∑–∞ —Ç–≤–æ–∏ KPI!

<i>–ò—Å–ø–æ–ª—å–∑—É–π –º–µ–Ω—é –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–æ—Ç–æ–º</i>""",
            reply_markup=user_kb(
                role=int(state_data.get("role"))
                if state_data.get("role")
                else user.Role,
                is_role_changed=True if state_data.get("role") else False,
            ),
        )
    else:
        await message.answer(f"""–ü—Ä–∏–≤–µ—Ç, <b>@{message.from_user.username}</b>!
        
–ù–µ –Ω–∞—à–µ–ª —Ç–µ–±—è –≤ —Å–ø–∏—Å–∫–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —á–µ—Ä–µ–∑ –±–æ—Ç–∞ –ì—Ä–∞—Ñ–∏–∫–æ–≤
–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ —Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–π –æ–±—Ä–∞—Ç–∏—Å—å –∫ –ú–∏–ü""")


@user_router.callback_query(MainMenu.filter(F.menu == "main"))
async def main_cb(callback: CallbackQuery, stp_db, state: FSMContext):
    async with stp_db() as session:
        repo = RequestsRepo(session)
        user: User = await repo.users.get_user(user_id=callback.from_user.id)

    state_data = await state.get_data()

    await callback.message.edit_text(
        f"""–ü—Ä–∏–≤–µ—Ç, <b>{user.FIO}</b>!

–Ø - –ê—á–∏–≤–µ—Ä
–ü–æ–º–æ–≥—É —Ç–µ–±–µ –ø–æ–ª—É—á–∏—Ç—å –Ω–∞–≥—Ä–∞–¥—ã –∏ –±–æ–Ω—É—Å—ã –∑–∞ —Ç–≤–æ–∏ KPI!

–ò—Å–ø–æ–ª—å–∑—É–π –º–µ–Ω—é, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ""",
        reply_markup=user_kb(
            role=int(state_data.get("role")) if state_data.get("role") else user.Role,
            is_role_changed=True if state_data.get("role") else False,
        ),
    )


@user_router.callback_query(MainMenu.filter(F.menu == "level"))
async def user_level(callback: CallbackQuery, achiever_db):
    async with achiever_db() as session:
        repo = RequestsRepo(session)
        total_points = await repo.accruals.accruals_sum(user_id=callback.from_user.id)
        wasted_points = await repo.executes.executes_sum(user_id=callback.from_user.id)

    current_points_amount = total_points - wasted_points

    # TODO —É—Ç–æ—á–Ω–∏—Ç—å –º–µ—Ö–∞–Ω–∏–∫—É —Ä–∞—Å—á–µ—Ç–∞ —É—Ä–æ–≤–Ω—è
    await callback.message.edit_text(
        f"""<b>üèÖ –ü—Ä–æ—Ñ–∏–ª—å</b>

–¢–µ–∫—É—â–µ–µ –∫–æ–ª-–≤–æ –±–∞–ª–ª–æ–≤: <b>{current_points_amount}</b>
–£—Ä–æ–≤–µ–Ω—å: <b>{round(total_points / 100)}</b>

<i>–í—Å–µ–≥–æ –Ω–∞–∫–æ–ø–ª–µ–Ω–æ: <b>{total_points}</b>
–í—Å–µ–≥–æ –ø–æ—Ç—Ä–∞—á–µ–Ω–æ: <b>{wasted_points}</b></i>""",
        reply_markup=back_kb(),
    )


@user_router.callback_query(MainMenu.filter(F.menu == "faq"))
async def user_level(callback: CallbackQuery):
    await callback.message.edit_text(
        """<b>‚ùìÔ∏è FAQ</b>

üìå<u><b>–ê—á–∏–≤–∫–∏</b></u> - –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∑–∞ —É—Å–ø–µ—Ö–∏ –≤ —Ä–∞–±–æ—Ç–µ, –∑–∞ –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—á–∏—Å–ª—è—é—Ç—Å—è –±–∞–ª–ª—ã
–ë—ã–≤–∞—é—Ç <b>–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ</b> –∏ <b>—Ä—É—á–Ω—ã–µ</b> (–Ω–∞—á–∏—Å–ª—è—é—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º)
–ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –≤ –º–µ–Ω—é <b>üéØ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è</b>

–í <b>üèÖ –ü—Ä–æ—Ñ–∏–ª–µ</b> –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏—Å—Ç–æ—Ä–∏—é –ø–æ–ª—É—á–µ–Ω–∏—è –∞—á–∏–≤–æ–∫ –∏ –±–∞–ª–ª–æ–≤
–£ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏—Ö –∞—á–∏–≤–æ–∫ —É–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –ø–µ—Ä–∏–æ–¥ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è, —É –æ—Å—Ç–∞–ª—å–Ω—ã—Ö - –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –¥–µ–Ω—å

üìå<u><b>–ù–∞–≥—Ä–∞–¥–∞</b></u> - –±–æ–Ω—É—Å –∑–∞ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –±–∞–ª–ª—ã
–°–ø–∏—Å–æ–∫ –≤ –º–µ–Ω—é <b>‚ùáÔ∏è –î–æ—Å—Ç—É–ø–Ω—ã–µ</b> —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å—é
–ù–∞–≥—Ä–∞–¥—ã —Å–æ —Å—á–µ—Ç—á–∏–∫–æ–º üßÆ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å <u>–æ–¥–∏–Ω —Ä–∞–∑ –∑–∞ —Å–º–µ–Ω—É</u>

–ü–æ—Å–ª–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –Ω–∞–≥—Ä–∞–¥–∞ –∏–¥–µ—Ç –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–º
–°—Ç–∞—Ç—É—Å –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å –≤ –º–µ–Ω—é <b>‚ú¥Ô∏è –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ</b>

‚ùóÔ∏èÔ∏è –û –±–∞–≥–∞—Ö –º–æ–∂–Ω–æ —Å–æ–æ–±—â–∏—Ç—å –ø–æ –∫–Ω–æ–ø–∫–µ <b>üôã‚Äç‚ôÇÔ∏è –ü–æ–º–æ–≥–∏—Ç–µ</b>""",
        reply_markup=back_kb(),
    )
